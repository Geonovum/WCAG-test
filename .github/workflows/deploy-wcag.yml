name: WCAG Check + Build & Deploy to GitHub Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  wcag-build-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout repository
      - uses: actions/checkout@v3

      # 2Ô∏è‚É£ Install dependencies
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      # 3Ô∏è‚É£ Start local server (indien nodig voor pa11y)
      - name: Start dev server
        run: npm start &

      - name: Wait for server
        run: npx wait-on http://localhost:3000

      # 4Ô∏è‚É£ WCAG 2.1 AA check
      - name: Run WCAG 2.1 AA check
        run: |
          node <<'EOF'
          const pa11y = require('pa11y');
          const { execSync } = require('child_process');

          const siteDir = '.';
          const htmlFiles = execSync(`
            find "${siteDir}" -name "*.html" \
            -not -path "*/node_modules/*" \
            -not -path "*/dist/*" \
            -not -path "*/.next/*" \
            -not -path "*/.*/*"
          `)
            .toString()
            .trim()
            .split('\n')
            .filter(Boolean);

          (async () => {
            let failed = false;
            for (const file of htmlFiles) {
              const relativePath = file.replace(new RegExp(\`^${siteDir}/?\`), '');
              const url = \`http://localhost:3000/${relativePath}\`;
              console.log(`\n=== Checking ${url} ===`);

              try {
                const results = await pa11y(url, {
                  standard: 'WCAG2AA',
                  timeout: 30000,
                  chromeLaunchConfig: {
                    args: ['--no-sandbox','--disable-setuid-sandbox']
                  }
                });

                if (results.issues.length > 0) {
                  failed = true;
                  console.log(`\n‚ùå ${results.issues.length} issues found on ${url}\n`);
                  results.issues.forEach(issue => {
                    let icon = issue.type === 'error' ? 'üõë' : issue.type === 'warning' ? '‚ö†Ô∏è' : '‚ÑπÔ∏è';
                    const msg = issue.message.replace(/\|/g, '\\|');
                    console.log(`${icon} [${issue.type}] ${issue.selector} ‚Üí ${msg}`);
                  });
                } else {
                  console.log(`‚úÖ No issues found on ${url}`);
                }

              } catch (err) {
                console.error(`Error checking ${url}:`, err);
                failed = true;
              }
            }

            if (failed) {
              console.error("\n‚ùå WCAG check failed for one or more pages.");
              process.exit(1);
            } else {
              console.log("\n‚úÖ All pages passed WCAG checks.");
            }
          })();
          EOF

      # 5Ô∏è‚É£ Build site
      - name: Build site
        run: npm run build

      # 6Ô∏è‚É£ Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v6
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build
